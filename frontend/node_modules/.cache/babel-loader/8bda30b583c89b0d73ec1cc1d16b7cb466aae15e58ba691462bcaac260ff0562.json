{"ast":null,"code":"var _jsxFileName = \"D:\\\\JobApplicationTracker\\\\frontend\\\\src\\\\components\\\\JobList.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobList({\n  jobs,\n  setJobs\n}) {\n  const deleteJob = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this job?\")) return;\n    await fetch(`http://localhost:5000/api/jobs/${id}`, {\n      method: \"DELETE\"\n    });\n    setJobs(prev => prev.filter(j => j._id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"job-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: job.companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: job.jobTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: new Date(job.applicationDate).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: `status ${job.status.toLowerCase()}`,\n          children: job.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteJob(job._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, job._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","JobList","jobs","setJobs","deleteJob","id","window","confirm","fetch","method","prev","filter","j","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","companyName","jobTitle","Date","applicationDate","toLocaleDateString","status","toLowerCase","onClick","_c","$RefreshReg$"],"sources":["D:/JobApplicationTracker/frontend/src/components/JobList.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function JobList({ jobs, setJobs }) {\r\n  const deleteJob = async id => {\r\n    if (!window.confirm(\"Are you sure you want to delete this job?\")) return;\r\n    await fetch(`http://localhost:5000/api/jobs/${id}`, { method: \"DELETE\" });\r\n    setJobs(prev => prev.filter(j => j._id !== id));\r\n  };\r\n\r\n  return (\r\n    <table className=\"job-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Company</th>\r\n          <th>Job Title</th>\r\n          <th>Date</th>\r\n          <th>Status</th>\r\n          <th>Action</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {jobs.map(job => (\r\n          <tr key={job._id}>\r\n            <td>{job.companyName}</td>\r\n            <td>{job.jobTitle}</td>\r\n            <td>{new Date(job.applicationDate).toLocaleDateString()}</td>\r\n            <td className={`status ${job.status.toLowerCase()}`}>{job.status}</td>\r\n            <td><button onClick={() => deleteJob(job._id)}>Delete</button></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}