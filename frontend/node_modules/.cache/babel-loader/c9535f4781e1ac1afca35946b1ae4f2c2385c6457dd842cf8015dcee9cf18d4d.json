{"ast":null,"code":"var _jsxFileName = \"D:\\\\JobApplicationTracker\\\\frontend\\\\src\\\\components\\\\JobList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport EditJobModal from \"./EditJobModal\";\nimport JobDetailsModal from \"./JobDetailsModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobList({\n  jobs,\n  setJobs,\n  token\n}) {\n  _s();\n  const [selectedJob, setSelectedJob] = useState(null);\n  const [viewJob, setViewJob] = useState(null);\n  const deleteJob = async id => {\n    if (!window.confirm(\"Are you sure you want to delete this job?\")) return;\n    await fetch(`http://localhost:5000/api/jobs/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setJobs(prev => prev.filter(j => j._id !== id));\n  };\n  const handleSave = updatedJob => {\n    setJobs(prev => prev.map(j => j._id === updatedJob._id ? updatedJob : j));\n    setSelectedJob(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"job-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.companyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: job.jobTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(job.applicationDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `status ${job.status.toLowerCase()}`,\n            children: job.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setViewJob(job),\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setSelectedJob(job),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteJob(job._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, job._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), selectedJob && /*#__PURE__*/_jsxDEV(EditJobModal, {\n      job: selectedJob,\n      token: token,\n      onClose: () => setSelectedJob(null),\n      onSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), viewJob && /*#__PURE__*/_jsxDEV(JobDetailsModal, {\n      job: viewJob,\n      onClose: () => setViewJob(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(JobList, \"FxqB8KoGnN3YkrLOYZ80Hwr3NxE=\");\n_c = JobList;\nvar _c;\n$RefreshReg$(_c, \"JobList\");","map":{"version":3,"names":["React","useState","EditJobModal","JobDetailsModal","jsxDEV","_jsxDEV","JobList","jobs","setJobs","token","_s","selectedJob","setSelectedJob","viewJob","setViewJob","deleteJob","id","window","confirm","fetch","method","headers","Authorization","prev","filter","j","_id","handleSave","updatedJob","map","children","className","fileName","_jsxFileName","lineNumber","columnNumber","job","companyName","jobTitle","Date","applicationDate","toLocaleDateString","status","toLowerCase","onClick","onClose","onSave","_c","$RefreshReg$"],"sources":["D:/JobApplicationTracker/frontend/src/components/JobList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport EditJobModal from \"./EditJobModal\";\r\nimport JobDetailsModal from \"./JobDetailsModal\";\r\n\r\nexport default function JobList({ jobs, setJobs, token }) {\r\n  const [selectedJob, setSelectedJob] = useState(null);\r\n  const [viewJob, setViewJob] = useState(null);\r\n\r\n  const deleteJob = async (id) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this job?\")) return;\r\n    await fetch(`http://localhost:5000/api/jobs/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    setJobs((prev) => prev.filter((j) => j._id !== id));\r\n  };\r\n\r\n  const handleSave = (updatedJob) => {\r\n    setJobs((prev) => prev.map((j) => (j._id === updatedJob._id ? updatedJob : j)));\r\n    setSelectedJob(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"job-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Company</th>\r\n            <th>Title</th>\r\n            <th>Date</th>\r\n            <th>Status</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {jobs.map((job) => (\r\n            <tr key={job._id}>\r\n              <td>{job.companyName}</td>\r\n              <td>{job.jobTitle}</td>\r\n              <td>{new Date(job.applicationDate).toLocaleDateString()}</td>\r\n              <td className={`status ${job.status.toLowerCase()}`}>{job.status}</td>\r\n              <td>\r\n                <button onClick={() => setViewJob(job)}>View</button>\r\n                <button onClick={() => setSelectedJob(job)}>Edit</button>\r\n                <button onClick={() => deleteJob(job._id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {selectedJob && (\r\n        <EditJobModal job={selectedJob} token={token} onClose={() => setSelectedJob(null)} onSave={handleSave} />\r\n      )}\r\n\r\n      {viewJob && <JobDetailsModal job={viewJob} onClose={() => setViewJob(null)} />}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}